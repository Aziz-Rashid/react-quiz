{"ast":null,"code":"var _jsxFileName = \"/home/aziz/Desktop/react-quiz/src/App.tsx\";\nimport React, { useState } from 'react';\nimport { fetchQuizQuestions } from './API';\nimport Question from './components/Question';\nimport { Difficulty } from './API';\nimport './app.css';\nimport Button from '@material-ui/core/Button';\nimport spinner from './images/spinner.gif';\nconst TOTAL_QUESTIONS;\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const [inp, setinp] = useState();\n\n  const change = e => {\n    setinp(e.target.value);\n  };\n\n  const setdata = () => {\n    TOTAL_QUESTIONS = setinp;\n    console.log(TOTAL_QUESTIONS);\n  };\n\n  const Quiz = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = e => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      const correct = questions[number].correct_answer === answer;\n      if (correct) setScore(prev => prev + 1);\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer\n      };\n      setUserAnswers(prev => [...prev, answerObject]);\n    }\n  };\n\n  const nextQuestion = () => {\n    const nextQ = number + 1;\n\n    if (nextQ === TOTAL_QUESTIONS) {\n      setGameOver(true);\n    } else {\n      setNumber(nextQ);\n    }\n  };\n\n  const [counter, setCounter] = React.useState(500);\n  React.useEffect(() => {\n    const timer = counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n    return () => clearInterval(timer);\n  }, [counter]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Quiz app \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    onChange: change,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: setdata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"click me \")), gameOver || userAnswers.length === TOTAL_QUESTIONS ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: Quiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Start Quiz\")) : null, !gameOver ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Score: \", score), \" \", /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 67\n    }\n  }, \"Time Remaining: \", counter)) : null, loading ? /*#__PURE__*/React.createElement(\"img\", {\n    src: spinner,\n    alt: \"\",\n    width: \"50%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 18\n    }\n  }) : null, !loading && !gameOver && /*#__PURE__*/React.createElement(Question, {\n    questionNr: number + 1,\n    totalQuestions: TOTAL_QUESTIONS,\n    question: questions[number].question,\n    answers: questions[number].answers,\n    userAnswer: userAnswers ? userAnswers[number] : undefined,\n    callback: checkAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), !gameOver && !loading && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 ? /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Next Question\") : null);\n};\n\nexport default App;","map":{"version":3,"sources":["/home/aziz/Desktop/react-quiz/src/App.tsx"],"names":["React","useState","fetchQuizQuestions","Question","Difficulty","Button","spinner","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","inp","setinp","change","e","target","value","setdata","console","log","Quiz","newQuestions","EASY","checkAnswer","answer","currentTarget","correct","correct_answer","prev","answerObject","question","correctAnswer","nextQuestion","nextQ","counter","setCounter","useEffect","timer","setInterval","clearInterval","length","answers","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { fetchQuizQuestions } from './API';\nimport Question from './components/Question';\nimport { QuestionsState, Difficulty } from './API';\nimport './app.css'\nimport Button from '@material-ui/core/Button';\nimport spinner from './images/spinner.gif'\n\nexport type AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n};\n const TOTAL_QUESTIONS ;\n\nconst App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<QuestionsState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const [inp,setinp] = useState()\n\n  const change = (e:any) =>{\n    setinp(e.target.value)\n  }\n  const setdata = () =>{\n    TOTAL_QUESTIONS = setinp\n    console.log(TOTAL_QUESTIONS)\n  }\n  const Quiz = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(\n      TOTAL_QUESTIONS,\n      Difficulty.EASY\n    );\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = (e: any) => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      const correct = questions[number].correct_answer === answer;\n      if (correct) setScore((prev) => prev + 1);\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer,\n      };\n      setUserAnswers((prev) => [...prev, answerObject]);\n    }\n  };\n  \n  const nextQuestion = () => {\n    const nextQ = number + 1;\n\n    if (nextQ === TOTAL_QUESTIONS) {\n      setGameOver(true);\n    } else {\n      setNumber(nextQ);\n    }\n  };\n  const [counter, setCounter] = React.useState(500);\n  React.useEffect(() => {\n    const timer:any = counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n    return () => clearInterval(timer);\n  }, [counter]);\n\n  return (\n    <div className=\"bg\">\n      <h1 >Quiz app </h1>\n      <div>\n      <input type=\"number\" onChange={change}/>\n      <Button onClick={setdata}>click me </Button>\n      </div>\n      {gameOver || userAnswers.length === TOTAL_QUESTIONS ? (\n        <div >\n          <Button className=\"btn\" variant=\"contained\" color=\"primary\" onClick={Quiz}>\n            Start Quiz\n              </Button>\n        </div>\n      ) : null}\n      {!gameOver ? <div><h1 className='score'>Score: {score}</h1> <h3 className=\"time\">Time Remaining: {counter}</h3></div>  : null}\n     \n      {loading ? <img src={spinner} alt=\"\"  width=\"50%\"/> : null}\n      {!loading && !gameOver && (\n        <Question\n          questionNr={number + 1}\n          totalQuestions={TOTAL_QUESTIONS}\n          question={questions[number].question}\n          answers={questions[number].answers}\n          userAnswer={userAnswers ? userAnswers[number] : undefined}\n          callback={checkAnswer}\n        />\n      )}\n      {!gameOver && !loading && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 ? (\n\n        <Button className=\"btn\" variant=\"contained\" color=\"primary\" onClick={nextQuestion}>\n          Next Question\n        </Button>\n      ) : null}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}